/* 
 * Brevo API
 *
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :- -- -- -- -- -- --: | - -- -- -- -- -- -- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |   | 422  | Error. Unprocessable Entity | 
 *
 * OpenAPI spec version: 3.0.0
 * Contact: contact@brevo.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = brevo_csharp.Client.SwaggerDateConverter;

namespace brevo_csharp.Model
{
    /// <summary>
    /// MasterDetailsResponse
    /// </summary>
    [DataContract]
    public partial class MasterDetailsResponse :  IEquatable<MasterDetailsResponse>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MasterDetailsResponse" /> class.
        /// </summary>
        /// <param name="email">Email id of master account.</param>
        /// <param name="companyName">Company name of master account organization.</param>
        /// <param name="id">Unique identifier of the master account organization.</param>
        /// <param name="currencyCode">Currency code of the master account organization.</param>
        /// <param name="timezone">Timezone of the master account organization.</param>
        /// <param name="billingInfo">billingInfo.</param>
        /// <param name="planInfo">planInfo.</param>
        public MasterDetailsResponse(string email = default(string), string companyName = default(string), long? id = default(long?), string currencyCode = default(string), string timezone = default(string), MasterDetailsResponseBillingInfo billingInfo = default(MasterDetailsResponseBillingInfo), MasterDetailsResponsePlanInfo planInfo = default(MasterDetailsResponsePlanInfo))
        {
            this.Email = email;
            this.CompanyName = companyName;
            this.Id = id;
            this.CurrencyCode = currencyCode;
            this.Timezone = timezone;
            this.BillingInfo = billingInfo;
            this.PlanInfo = planInfo;
        }
        
        /// <summary>
        /// Email id of master account
        /// </summary>
        /// <value>Email id of master account</value>
        [DataMember(Name="email", EmitDefaultValue=false)]
        public string Email { get; set; }

        /// <summary>
        /// Company name of master account organization
        /// </summary>
        /// <value>Company name of master account organization</value>
        [DataMember(Name="companyName", EmitDefaultValue=false)]
        public string CompanyName { get; set; }

        /// <summary>
        /// Unique identifier of the master account organization
        /// </summary>
        /// <value>Unique identifier of the master account organization</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public long? Id { get; set; }

        /// <summary>
        /// Currency code of the master account organization
        /// </summary>
        /// <value>Currency code of the master account organization</value>
        [DataMember(Name="currencyCode", EmitDefaultValue=false)]
        public string CurrencyCode { get; set; }

        /// <summary>
        /// Timezone of the master account organization
        /// </summary>
        /// <value>Timezone of the master account organization</value>
        [DataMember(Name="timezone", EmitDefaultValue=false)]
        public string Timezone { get; set; }

        /// <summary>
        /// Gets or Sets BillingInfo
        /// </summary>
        [DataMember(Name="billingInfo", EmitDefaultValue=false)]
        public MasterDetailsResponseBillingInfo BillingInfo { get; set; }

        /// <summary>
        /// Gets or Sets PlanInfo
        /// </summary>
        [DataMember(Name="planInfo", EmitDefaultValue=false)]
        public MasterDetailsResponsePlanInfo PlanInfo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class MasterDetailsResponse {\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  CompanyName: ").Append(CompanyName).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  CurrencyCode: ").Append(CurrencyCode).Append("\n");
            sb.Append("  Timezone: ").Append(Timezone).Append("\n");
            sb.Append("  BillingInfo: ").Append(BillingInfo).Append("\n");
            sb.Append("  PlanInfo: ").Append(PlanInfo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as MasterDetailsResponse);
        }

        /// <summary>
        /// Returns true if MasterDetailsResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of MasterDetailsResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(MasterDetailsResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                ) && 
                (
                    this.CompanyName == input.CompanyName ||
                    (this.CompanyName != null &&
                    this.CompanyName.Equals(input.CompanyName))
                ) && 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.CurrencyCode == input.CurrencyCode ||
                    (this.CurrencyCode != null &&
                    this.CurrencyCode.Equals(input.CurrencyCode))
                ) && 
                (
                    this.Timezone == input.Timezone ||
                    (this.Timezone != null &&
                    this.Timezone.Equals(input.Timezone))
                ) && 
                (
                    this.BillingInfo == input.BillingInfo ||
                    (this.BillingInfo != null &&
                    this.BillingInfo.Equals(input.BillingInfo))
                ) && 
                (
                    this.PlanInfo == input.PlanInfo ||
                    (this.PlanInfo != null &&
                    this.PlanInfo.Equals(input.PlanInfo))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Email != null)
                    hashCode = hashCode * 59 + this.Email.GetHashCode();
                if (this.CompanyName != null)
                    hashCode = hashCode * 59 + this.CompanyName.GetHashCode();
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.CurrencyCode != null)
                    hashCode = hashCode * 59 + this.CurrencyCode.GetHashCode();
                if (this.Timezone != null)
                    hashCode = hashCode * 59 + this.Timezone.GetHashCode();
                if (this.BillingInfo != null)
                    hashCode = hashCode * 59 + this.BillingInfo.GetHashCode();
                if (this.PlanInfo != null)
                    hashCode = hashCode * 59 + this.PlanInfo.GetHashCode();
                return hashCode;
            }
        }
    }

}
