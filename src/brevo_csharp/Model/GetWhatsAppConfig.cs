/* 
 * Brevo API
 *
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :- -- -- -- -- -- --: | - -- -- -- -- -- -- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |   | 422  | Error. Unprocessable Entity | 
 *
 * OpenAPI spec version: 3.0.0
 * Contact: contact@brevo.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = brevo_csharp.Client.SwaggerDateConverter;

namespace brevo_csharp.Model
{
    /// <summary>
    /// GetWhatsAppConfig
    /// </summary>
    [DataContract]
    public partial class GetWhatsAppConfig :  IEquatable<GetWhatsAppConfig>
    {
        /// <summary>
        /// Quality status of phone number associated with WhatsApp account. There are three quality ratings. example - **High (GREEN) , Medium (YELLOW) and Low(RED)**
        /// </summary>
        /// <value>Quality status of phone number associated with WhatsApp account. There are three quality ratings. example - **High (GREEN) , Medium (YELLOW) and Low(RED)**</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum PhoneNumberQualityEnum
        {
            
            /// <summary>
            /// Enum GREEN for value: GREEN
            /// </summary>
            [EnumMember(Value = "GREEN")]
            GREEN = 1,
            
            /// <summary>
            /// Enum YELLOW for value: YELLOW
            /// </summary>
            [EnumMember(Value = "YELLOW")]
            YELLOW = 2,
            
            /// <summary>
            /// Enum RED for value: RED
            /// </summary>
            [EnumMember(Value = "RED")]
            RED = 3
        }

        /// <summary>
        /// Quality status of phone number associated with WhatsApp account. There are three quality ratings. example - **High (GREEN) , Medium (YELLOW) and Low(RED)**
        /// </summary>
        /// <value>Quality status of phone number associated with WhatsApp account. There are three quality ratings. example - **High (GREEN) , Medium (YELLOW) and Low(RED)**</value>
        [DataMember(Name="phoneNumberQuality", EmitDefaultValue=false)]
        public PhoneNumberQualityEnum? PhoneNumberQuality { get; set; }
        /// <summary>
        /// Status of the name associated with WhatsApp Phone number
        /// </summary>
        /// <value>Status of the name associated with WhatsApp Phone number</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum PhoneNumberNameStatusEnum
        {
            
            /// <summary>
            /// Enum APPROVED for value: APPROVED
            /// </summary>
            [EnumMember(Value = "APPROVED")]
            APPROVED = 1,
            
            /// <summary>
            /// Enum PENDING for value: PENDING
            /// </summary>
            [EnumMember(Value = "PENDING")]
            PENDING = 2,
            
            /// <summary>
            /// Enum REJECTED for value: REJECTED
            /// </summary>
            [EnumMember(Value = "REJECTED")]
            REJECTED = 3
        }

        /// <summary>
        /// Status of the name associated with WhatsApp Phone number
        /// </summary>
        /// <value>Status of the name associated with WhatsApp Phone number</value>
        [DataMember(Name="phoneNumberNameStatus", EmitDefaultValue=false)]
        public PhoneNumberNameStatusEnum? PhoneNumberNameStatus { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetWhatsAppConfig" /> class.
        /// </summary>
        /// <param name="whatsappBusinessAccountId">Id of the WhatsApp business account.</param>
        /// <param name="sendingLimit">Sending limit Information of the WhatsApp API account.</param>
        /// <param name="phoneNumberQuality">Quality status of phone number associated with WhatsApp account. There are three quality ratings. example - **High (GREEN) , Medium (YELLOW) and Low(RED)**.</param>
        /// <param name="whatsappBusinessAccountStatus">Status information related to WhatsApp Api account.</param>
        /// <param name="businessStatus">Verification status information of the Business account.</param>
        /// <param name="phoneNumberNameStatus">Status of the name associated with WhatsApp Phone number.</param>
        public GetWhatsAppConfig(string whatsappBusinessAccountId = default(string), string sendingLimit = default(string), PhoneNumberQualityEnum? phoneNumberQuality = default(PhoneNumberQualityEnum?), string whatsappBusinessAccountStatus = default(string), string businessStatus = default(string), PhoneNumberNameStatusEnum? phoneNumberNameStatus = default(PhoneNumberNameStatusEnum?))
        {
            this.WhatsappBusinessAccountId = whatsappBusinessAccountId;
            this.SendingLimit = sendingLimit;
            this.PhoneNumberQuality = phoneNumberQuality;
            this.WhatsappBusinessAccountStatus = whatsappBusinessAccountStatus;
            this.BusinessStatus = businessStatus;
            this.PhoneNumberNameStatus = phoneNumberNameStatus;
        }
        
        /// <summary>
        /// Id of the WhatsApp business account
        /// </summary>
        /// <value>Id of the WhatsApp business account</value>
        [DataMember(Name="whatsappBusinessAccountId", EmitDefaultValue=false)]
        public string WhatsappBusinessAccountId { get; set; }

        /// <summary>
        /// Sending limit Information of the WhatsApp API account
        /// </summary>
        /// <value>Sending limit Information of the WhatsApp API account</value>
        [DataMember(Name="sendingLimit", EmitDefaultValue=false)]
        public string SendingLimit { get; set; }


        /// <summary>
        /// Status information related to WhatsApp Api account
        /// </summary>
        /// <value>Status information related to WhatsApp Api account</value>
        [DataMember(Name="whatsappBusinessAccountStatus", EmitDefaultValue=false)]
        public string WhatsappBusinessAccountStatus { get; set; }

        /// <summary>
        /// Verification status information of the Business account
        /// </summary>
        /// <value>Verification status information of the Business account</value>
        [DataMember(Name="businessStatus", EmitDefaultValue=false)]
        public string BusinessStatus { get; set; }


        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetWhatsAppConfig {\n");
            sb.Append("  WhatsappBusinessAccountId: ").Append(WhatsappBusinessAccountId).Append("\n");
            sb.Append("  SendingLimit: ").Append(SendingLimit).Append("\n");
            sb.Append("  PhoneNumberQuality: ").Append(PhoneNumberQuality).Append("\n");
            sb.Append("  WhatsappBusinessAccountStatus: ").Append(WhatsappBusinessAccountStatus).Append("\n");
            sb.Append("  BusinessStatus: ").Append(BusinessStatus).Append("\n");
            sb.Append("  PhoneNumberNameStatus: ").Append(PhoneNumberNameStatus).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetWhatsAppConfig);
        }

        /// <summary>
        /// Returns true if GetWhatsAppConfig instances are equal
        /// </summary>
        /// <param name="input">Instance of GetWhatsAppConfig to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetWhatsAppConfig input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.WhatsappBusinessAccountId == input.WhatsappBusinessAccountId ||
                    (this.WhatsappBusinessAccountId != null &&
                    this.WhatsappBusinessAccountId.Equals(input.WhatsappBusinessAccountId))
                ) && 
                (
                    this.SendingLimit == input.SendingLimit ||
                    (this.SendingLimit != null &&
                    this.SendingLimit.Equals(input.SendingLimit))
                ) && 
                (
                    this.PhoneNumberQuality == input.PhoneNumberQuality ||
                    (this.PhoneNumberQuality != null &&
                    this.PhoneNumberQuality.Equals(input.PhoneNumberQuality))
                ) && 
                (
                    this.WhatsappBusinessAccountStatus == input.WhatsappBusinessAccountStatus ||
                    (this.WhatsappBusinessAccountStatus != null &&
                    this.WhatsappBusinessAccountStatus.Equals(input.WhatsappBusinessAccountStatus))
                ) && 
                (
                    this.BusinessStatus == input.BusinessStatus ||
                    (this.BusinessStatus != null &&
                    this.BusinessStatus.Equals(input.BusinessStatus))
                ) && 
                (
                    this.PhoneNumberNameStatus == input.PhoneNumberNameStatus ||
                    (this.PhoneNumberNameStatus != null &&
                    this.PhoneNumberNameStatus.Equals(input.PhoneNumberNameStatus))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.WhatsappBusinessAccountId != null)
                    hashCode = hashCode * 59 + this.WhatsappBusinessAccountId.GetHashCode();
                if (this.SendingLimit != null)
                    hashCode = hashCode * 59 + this.SendingLimit.GetHashCode();
                if (this.PhoneNumberQuality != null)
                    hashCode = hashCode * 59 + this.PhoneNumberQuality.GetHashCode();
                if (this.WhatsappBusinessAccountStatus != null)
                    hashCode = hashCode * 59 + this.WhatsappBusinessAccountStatus.GetHashCode();
                if (this.BusinessStatus != null)
                    hashCode = hashCode * 59 + this.BusinessStatus.GetHashCode();
                if (this.PhoneNumberNameStatus != null)
                    hashCode = hashCode * 59 + this.PhoneNumberNameStatus.GetHashCode();
                return hashCode;
            }
        }
    }

}
